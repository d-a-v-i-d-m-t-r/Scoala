//Sa se scrie numarul natural n ca suma de p numere naturale distincte
#include <iostream>
using namespace std;
int  p,n,s;
int x[99];
int w = 0;

int suma(int k)
{
    if(k==1)
        return x[k];
    return x[k]+suma(k-1);
}
int valid(int k) {
    if(k>=2 && x[k-1]>=x[k])
        return 0;
    if (suma(k)>n)
        return 0;
return 1;
}



int sol(int k) {
  if(suma(k)==n && k==p)
      return 1;
   else
       return 0;
}

void afis(int k) {
    for (int i = 1; i <= k; i++)
cout << x[i]<<" ";
        cout << "\n";
            w++;
}

void back(int k) {
x[k] = 0;
    while (x[k] < n) {
            x[k]++;
            if (valid(k))
            {
                if (sol(k))
                afis(k);
                else
    back(k + 1);
}
            }

}
int main()
{
cout <<"n = ";
cin>>n;
cout<<"p = ";
cin>>p;
back(1);

return 0;
}

/*#include <iostream>
#include <fstream>
using namespace std;

int  p,n,s;
int x[99];
int w = 0;
fstream fout("descompunere.txt", ios::out);
int suma(int k)
{
    if(k==1)
        return x[k];
    return x[k]+suma(k-1);
}
int valid(int k) {
    if(k>=2 && x[k-1]>=x[k])
        return 0;
    if (suma(k)>n)
        return 0;
return 1;
}

int sol(int k) {
  if(suma(k)==n && k==p)
      return 1;
   else
       return 0;
}

void afis(int k) {
    for (int i = 1; i <= k; i++)
fout << x[i]<<" ";
        fout<< "\n";
            w++;
}

void back(int k) {
x[k] = 0;
    while (x[k] < n) {
            x[k]++;
            if (valid(k))
            {
                if (sol(k))
                afis(k);
                else
    back(k + 1);
}
            }

}
int main()
{
fout.open ("descompunere.txt");
cout <<"n = ";
cin>>n;
cout<<"p = ";
cin>>p;
back(1);
fout.close();
return 0;
}
*/
